@page "/edit-professor/{id:int}"
@using BlazorWasmClient.Services
@using BlazorWasmShared.Models
@using BlazorWasmShared.Enum
@inject ProfessorService ProfessorService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Edit Professor</h3>

@if (professor == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container">
        <div class="form-group">
            <label>Full Name</label>
            <input class="form-control" value="@professor.FullName" disabled />
        </div>

        <div class="form-group">
            <label>Keywords</label>
            <input class="form-control" value="@professor.Keywords" disabled />
        </div>

        <div class="form-group">
            <label>Papers</label>
            <input class="form-control" value="@professor.Papers" disabled />
        </div>

        <div class="form-group">
            <label>University</label>
            <input class="form-control" value="@professor.University" disabled />
        </div>

        <div class="form-group">
            <label>WOS</label>
            <a href="https://@professor.Wos" target="_blank">@professor.Wos</a>
        </div>

        <div class="form-group">
            <label>Web</label>
            <a href="https://@professor.Web" target="_blank">@professor.Web</a>
        </div>

        <div class="form-group">
            <label>Email</label>
            @if (!string.IsNullOrEmpty(professor.Email))
            {
                <a href="mailto:@professor.Email?subject=Apply for PhD">@professor.Email</a>
            }
        </div>

        <div class="form-group">
            <label>Text</label>
            <textarea class="form-control" @bind="@professor.Text"></textarea>
        </div>

        <div class="form-group">
            <label>Related</label>
            <input type="checkbox" @bind="@professor.Related" />
        </div>

        <div class="form-group">
            <label>Email Date</label>
            <input type="date" class="form-control" @bind="@professor.EmailDate" />
        </div>

        <div class="form-group">
            <label>Result</label>
            <select class="form-control" @bind="@professor.Result">
                @foreach (var value in Enum.GetValues<ResultType>())
                {
                    <option value="@value">@value</option>
                }
            </select>
        </div>

        <button class="btn btn-primary" @onclick="SaveChanges">Save</button>
        <button class="btn btn-secondary" @onclick="GoBack">Back</button>
    </div>
}

@code {
    [Parameter] public int id { get; set; }
    private Professor? professor;

    protected override async Task OnInitializedAsync()
    {
        professor = await ProfessorService.GetProfessorById(id);
    }

    private async Task SaveChanges()
    {
        professor.UpdateDate = DateTime.Now;
        await ProfessorService.UpdateProfessor(professor);
        await JS.InvokeVoidAsync("alert", "Professor details updated successfully!");
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"professors/{professor?.Country}");
    }
}
